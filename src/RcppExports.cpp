// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// days_in_country_internal
IntegerVector days_in_country_internal(IntegerVector date_crossing, IntegerVector is_arrival, IntegerVector n_crossing_person, int date_obs_end, int dur_test);
RcppExport SEXP _migstat_days_in_country_internal(SEXP date_crossingSEXP, SEXP is_arrivalSEXP, SEXP n_crossing_personSEXP, SEXP date_obs_endSEXP, SEXP dur_testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type date_crossing(date_crossingSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type is_arrival(is_arrivalSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_crossing_person(n_crossing_personSEXP);
    Rcpp::traits::input_parameter< int >::type date_obs_end(date_obs_endSEXP);
    Rcpp::traits::input_parameter< int >::type dur_test(dur_testSEXP);
    rcpp_result_gen = Rcpp::wrap(days_in_country_internal(date_crossing, is_arrival, n_crossing_person, date_obs_end, dur_test));
    return rcpp_result_gen;
END_RCPP
}
// is_long_term_mig_internal
IntegerVector is_long_term_mig_internal(IntegerVector is_arrival, IntegerVector res_status_before, IntegerVector res_status_after, IntegerVector days_in_country, IntegerVector days_obs, int dur_test, int dur_threshold, IntegerVector n_crossing_person);
RcppExport SEXP _migstat_is_long_term_mig_internal(SEXP is_arrivalSEXP, SEXP res_status_beforeSEXP, SEXP res_status_afterSEXP, SEXP days_in_countrySEXP, SEXP days_obsSEXP, SEXP dur_testSEXP, SEXP dur_thresholdSEXP, SEXP n_crossing_personSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type is_arrival(is_arrivalSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type res_status_before(res_status_beforeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type res_status_after(res_status_afterSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type days_in_country(days_in_countrySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type days_obs(days_obsSEXP);
    Rcpp::traits::input_parameter< int >::type dur_test(dur_testSEXP);
    Rcpp::traits::input_parameter< int >::type dur_threshold(dur_thresholdSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_crossing_person(n_crossing_personSEXP);
    rcpp_result_gen = Rcpp::wrap(is_long_term_mig_internal(is_arrival, res_status_before, res_status_after, days_in_country, days_obs, dur_test, dur_threshold, n_crossing_person));
    return rcpp_result_gen;
END_RCPP
}
// person_id_internal
void person_id_internal(IntegerVector personId, IntegerVector personId_is_na, IntegerVector match1, IntegerVector match2, int first_id);
RcppExport SEXP _migstat_person_id_internal(SEXP personIdSEXP, SEXP personId_is_naSEXP, SEXP match1SEXP, SEXP match2SEXP, SEXP first_idSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type personId(personIdSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type personId_is_na(personId_is_naSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type match1(match1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type match2(match2SEXP);
    Rcpp::traits::input_parameter< int >::type first_id(first_idSEXP);
    person_id_internal(personId, personId_is_na, match1, match2, first_id);
    return R_NilValue;
END_RCPP
}
// res_status_after_internal
IntegerVector res_status_after_internal(IntegerVector res_status_initial, IntegerVector is_arrival, IntegerVector days_in_country, IntegerVector days_obs, IntegerVector n_crossing_person, int dur_test, int dur_threshold);
RcppExport SEXP _migstat_res_status_after_internal(SEXP res_status_initialSEXP, SEXP is_arrivalSEXP, SEXP days_in_countrySEXP, SEXP days_obsSEXP, SEXP n_crossing_personSEXP, SEXP dur_testSEXP, SEXP dur_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type res_status_initial(res_status_initialSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type is_arrival(is_arrivalSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type days_in_country(days_in_countrySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type days_obs(days_obsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n_crossing_person(n_crossing_personSEXP);
    Rcpp::traits::input_parameter< int >::type dur_test(dur_testSEXP);
    Rcpp::traits::input_parameter< int >::type dur_threshold(dur_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(res_status_after_internal(res_status_initial, is_arrival, days_in_country, days_obs, n_crossing_person, dur_test, dur_threshold));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_migstat_days_in_country_internal", (DL_FUNC) &_migstat_days_in_country_internal, 5},
    {"_migstat_is_long_term_mig_internal", (DL_FUNC) &_migstat_is_long_term_mig_internal, 8},
    {"_migstat_person_id_internal", (DL_FUNC) &_migstat_person_id_internal, 5},
    {"_migstat_res_status_after_internal", (DL_FUNC) &_migstat_res_status_after_internal, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_migstat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
